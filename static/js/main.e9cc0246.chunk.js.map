{"version":3,"sources":["Img/NotImg.JPG","Component/Section.js","Component/Lodaer.js","Component/Message.js","Component/Poster.js","Routes/Home/HomePresenter.js","Api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TvPresenter.js","Routes/TV/index.js","Routes/TV/TvContainer.js","Routes/Search/SerachPresenter.js","Routes/Search/index.js","Routes/Search/SearchContianer.js","Component/Header.js","Component/Popup.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Component/Router.js","Component/GlobalStyles.js","Component/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Styled","Text","props","color","Message","text","console","log","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMoive","to","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","Loading","Helmet","Lodaer","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","moviesApi","get","params","api_key","language","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TvPresenter","topRating","airingToday","show","original_name","first_air_date","TvContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","upDateTerm","onSubmit","onChange","placeholder","value","SerachContainer","event","preventDefault","searchByTerm","target","a","SerachPresenter","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","PopupContainer","Popupinner","Button","button","Popup","closePopup","videoId","opts","height","width","playerVars","autoplay","onReady","_onReady","onClick","pauseVideo","Contianer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Homepage","Overview","p","CompaniesContainer","Companies","DetailPresenter","result","showPopup","tooglePopup","backdrop_path","runtime","episode_run_time","genres","genre","index","name","href","homepage","overview","production_companies","com","origin_country","videos","site","size","DetailContainer","isMovie","includes","match","push","history","parseId","parseInt","isNaN","request","path","exact","component","Home","TV","Search","Detail","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9cc0246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NotImg.0bb7a338.JPG\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  font-size: 32px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"image\" aria-label=\"Loading\">\r\n      👀\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Container = Styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Text = Styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n    {console.log(text)}\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = Styled.div`\r\nfont-size:12px;`;\r\n\r\nconst Image = Styled.div`\r\nbackground-Image:url(${(props) => props.bgUrl});\r\n  height:180px;\r\n  margin-bottom:5px;\r\n  background-size:cover;\r\n  background-position:center center;\r\n  border-radius:10px;\r\n  transition:opacity 0.2s linear;\r\n  `;\r\n\r\nconst Rating = Styled.span`\r\nbottom:5px;\r\nright:5px; \r\nposition:absolute;\r\nopacity:0;\r\ntransition:opacity 0.2s linear;`;\r\n\r\nconst ImageContainer = Styled.div`\r\nmargin-bottom:5px;\r\nposition:relative;\r\n&:hover{\r\n  ${Image} {\r\n    opacity:0.3;\r\n  }\r\n  ${Rating} {\r\n    opacity:1;\r\n    transition:opacity 0.2s linear;\r\n  }\r\n           \r\n}\r\n`;\r\n\r\nconst Title = Styled.span`\r\ndisplay:block;\r\nmargin-bottom:3px;`;\r\n\r\nconst Year = Styled.span`\r\nfont-size:10px;\r\ncolor:rgba(255,255,255,0.5);`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMoive = false }) => (\r\n  <Link to={isMoive ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../Img/NotImg.JPG\")\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            🏆\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.string,\r\n  isMoive: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Section from \"../../Component/Section\";\r\nimport Lodaer from \"../../Component/Lodaer\";\r\nimport Message from \"../../Component/Message\";\r\nimport Poster from \"../../Component/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, Loading }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {Loading ? (\r\n            <Lodaer />\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies | Nomflix</title>\r\n                </Helmet>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMoive={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Up Coming\">\r\n                        {upComing.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMoive={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Popular\">\r\n                        {popular.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMoive={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n        ;\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upComing: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    Loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () =>\r\n    api.get(\"movie/now_playing\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  upComing: () =>\r\n    api.get(\"movie/upcoming\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  popular: () =>\r\n    api.get(\"movie/popular\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n\r\n  movieSearch: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRating: () =>\r\n    api.get(\"tv/top_rated\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  popular: () =>\r\n    api.get(\"tv/popular\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  airingToday: () =>\r\n    api.get(\"tv/airing_today\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n\r\n  tvSearch: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        api_key: \"aaf73d06a96c7cdafaa6aabd6660b488\",\r\n        language: \"en-US\",\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\n\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../Api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    Loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying: nowPlaying,\r\n        upComing: upComing,\r\n        popular: popular,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't Find Movies imformation\" });\r\n    } finally {\r\n      this.setState({ Loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, Loading } = this.state;\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        Loading={Loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Section from \"../../Component/Section\";\r\nimport Lodaer from \"../../Component/Lodaer\";\r\nimport Message from \"../../Component/Message\";\r\nimport Poster from \"../../Component/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TvPresenter = ({ topRating, popular, airingToday, error, Loading }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV | Nomflix</title>\r\n        </Helmet>\r\n        {Loading ? (\r\n            <Lodaer />\r\n        ) : (\r\n            <Container>\r\n                {topRating && topRating.length > 0 && (\r\n                    <Section title=\"Top Rating\">\r\n                        {topRating.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular\">\r\n                        {popular.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n\r\n                {airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                        {console.log({ airingToday })}\r\n                    </Section>\r\n                )}\r\n\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n        ;\r\n    </>\r\n);\r\n\r\nTvPresenter.propTypes = {\r\n    topRating: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    error: PropTypes.string,\r\n    Loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TvPresenter;\r\n","import TvContainer from \"./TvContainer\";\r\n\r\nexport default TvContainer;\r\n","import React from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport { tvApi } from \"../../Api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRating: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    Loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRating },\r\n      } = await tvApi.topRating();\r\n      //console.log(topRating);\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      //console.log(popular);\r\n\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      //console.log(airingToday);\r\n\r\n      this.setState({\r\n        topRating: topRating,\r\n        popular: popular,\r\n        airingToday: airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't Find Tv impomation\" });\r\n    } finally {\r\n      this.setState({ Loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRating, popular, airingToday, error, Loading } = this.state;\r\n    return (\r\n      <TvPresenter\r\n        topRating={topRating}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        Loading={Loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Section from \"../../Component/Section\";\r\nimport Lodaer from \"../../Component/Lodaer\";\r\nimport Message from \"../../Component/Message\";\r\nimport Poster from \"../../Component/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, Loading, handleSubmit, upDateTerm }) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Serach | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input onChange={upDateTerm} placeholder=\"Search Moive or TV Show...\" value={searchTerm}></Input>\r\n        </Form>\r\n        {Loading ? (\r\n            <Lodaer />\r\n        ) : (\r\n            <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Result\">\r\n                        {movieResults.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMoive={true}\r\n                            />\r\n                        ))}\r\n                        {error}\r\n                    </Section>\r\n                )}\r\n\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Result\">\r\n                        {tvResults.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                                isMoive={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n                {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\r\n                    <Message color=\"#7f8c8d\" text=\"Noting Found\" />\r\n                )}\r\n            </>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    Loading: PropTypes.bool.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    upDateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SerachContainer from \"./SearchContianer\";\r\n\r\nexport default SerachContainer;\r\n","import React from \"react\";\r\nimport SerachPresenter from \"./SerachPresenter\";\r\nimport { moviesApi, tvApi } from \"../../Api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    Loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  upDateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      this.setState({ Loading: true });\r\n\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.movieSearch(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.tvSearch(searchTerm);\r\n\r\n      this.setState({ movieResults: movieResults, tvResults: tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't Find Result\" });\r\n    } finally {\r\n      this.setState({ Loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, Loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <SerachPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        Loading={Loading}\r\n        handleSubmit={this.handleSubmit}\r\n        upDateTerm={this.upDateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  /* &:not(:last-child) {\r\n    margin-right: 10px;\r\n  } */\r\n\r\n  width: 70px;\r\n  text-align: center;\r\n  background-color: ${(props) => (props.current ? \"#535c68\" : \"transparent\")};\r\n  transition: background-color 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Moives</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv/\"}>\r\n        <SLink to=\"/tv/\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/serach/\"}>\r\n        <SLink to=\"/serach/\">Serach</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst PopupContainer = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 99;\r\n`;\r\n\r\nconst Popupinner = styled.div`\r\n    width: 640px;\r\n    height: 390px;\r\n\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n    top: 25%;\r\n    bottom: 25%;\r\n    margin: auto;\r\n    border-radius: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: #7f8c8d;\r\n    border: none;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nclass Popup extends Component {\r\n    render() {\r\n        const opts = {\r\n            height: \"390\",\r\n            width: \"640\",\r\n            playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 1,\r\n            },\r\n        };\r\n        const { text, closePopup, videoId } = this.props;\r\n        return (\r\n            <PopupContainer>\r\n                <Popupinner>\r\n                    <h1>{text}</h1>\r\n                    <YouTube videoId={videoId} opts={opts} onReady={this._onReady} />;\r\n                    <Button onClick={closePopup}>Close</Button>\r\n                </Popupinner>\r\n            </PopupContainer>\r\n        );\r\n    }\r\n    _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Lodaer from \"../../Component/Lodaer\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { AiFillStar, BsStarHalf, AiOutlineStar } from \"react-icons/all\";\r\n\r\nimport Popup from \"../../Component/Popup\";\r\n\r\nconst Contianer = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(5px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    background-position: center center;\r\n    background-size: cover;\r\n    background-image: url(${(props) => props.bgImage});\r\n    border-radius: 10px;\r\n    margin-right: 20px;\r\n    mask-image: -webkit-gradient(\r\n        linear,\r\n        right top,\r\n        left top,\r\n        color-stop(1, rgba(0, 0, 0, 1)),\r\n        color-stop(0.5, rgba(0, 0, 0, 1)),\r\n        color-stop(0, rgba(0, 0, 0, 0))\r\n    );\r\n`;\r\nconst Data = styled.div`\r\n    width: 100%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    margin: 10px 0;\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 0 0 0 20px;\r\n`; // DIV 컨테이너\r\n\r\nconst Item = styled.span`\r\n    font-size: 18px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0px 10px;\r\n`;\r\n\r\nconst Homepage = styled.div`\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n    }\r\n    padding: 10px 5px;\r\n    font-size: 15px;\r\n    border: 1px #fff solid;\r\n    border-radius: 3px;\r\n    margin: 0px 0 25px;\r\n    width: 140px;\r\n    text-align: center;\r\n    color: #fff !important;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    width: 50%;\r\n    font-size: 16px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    margin-top: 30px;\r\n`; //줄거리\r\n\r\nconst CompaniesContainer = styled.div`\r\n    margin: 50px 0 0 20px;\r\n`;\r\n\r\nconst Companies = styled.p`\r\n    width: 100%;\r\n    font-size: 14px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n    }\r\n    padding: 10px 5px;\r\n    font-size: 15px;\r\n    border: 1px #fff solid;\r\n    border-radius: 3px;\r\n    margin: 0px 0 25px;\r\n    width: 140px;\r\n    text-align: center;\r\n    color: #fff !important;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, Loading, showPopup, tooglePopup }) =>\r\n    Loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loding | NomFlix</title>\r\n            </Helmet>\r\n            <Lodaer />\r\n        </>\r\n    ) : (\r\n        //최상위 div\r\n        <Contianer>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | NomFlix</title>\r\n            </Helmet>\r\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n            <Content>\r\n                <Cover\r\n                    bgImage={\r\n                        result.poster_path\r\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                            : require(\"../../Img/NotImg.JPG\")\r\n                    }\r\n                ></Cover>\r\n                <Data>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                    <ItemContainer>\r\n                        <Item>\r\n                            {result.release_date\r\n                                ? result.release_date.substring(0, 4)\r\n                                : result.first_air_date.substring(0, 4)}\r\n                        </Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time}</Item>min\r\n                        <Divider>•</Divider>\r\n                        <Item>\r\n                            {result.genres &&\r\n                                result.genres.map((genre, index) =>\r\n                                    index === result.genres.length - 1 ? `${genre.name}` : `${genre.name} /`\r\n                                )}\r\n                        </Item>\r\n                        {/* --별 평점-- */}\r\n                        <Item>\r\n                            {result.vote_average >= 0 && result.vote_average <= 2 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 2 && result.vote_average <= 3 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <BsStarHalf color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 3 && result.vote_average <= 4 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 4 && result.vote_average <= 5 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <BsStarHalf color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 5 && result.vote_average <= 6 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 6 && result.vote_average <= 7 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <BsStarHalf color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 7 && result.vote_average <= 8 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiOutlineStar />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 8 && result.vote_average <= 9 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <BsStarHalf color=\"#FFFF00\" />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                            {result.vote_average > 10 && result.vote_average <= 10 ? (\r\n                                <>\r\n                                    <Divider>•</Divider>\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />\r\n                                    <AiFillStar color=\"#FFFF00\" />/{result.vote_average}\r\n                                </>\r\n                            ) : null}\r\n                        </Item>\r\n                        <a href={`${result.homepage}`}>\r\n                            <Homepage>Homepage</Homepage>\r\n                        </a>\r\n                        {/* --별 평점-- */}\r\n                        <Overview>{result.overview}</Overview>\r\n                    </ItemContainer>\r\n\r\n                    <CompaniesContainer>\r\n                        <Title>Companies</Title>\r\n                        <Companies>\r\n                            {result.production_companies &&\r\n                                result.production_companies.map((com, index) =>\r\n                                    index === result.production_companies.length - 1 ? (\r\n                                        <Item key={index}>{`(${com.name} / ${com.origin_country}) `}</Item>\r\n                                    ) : (\r\n                                        <Item key={com.id}>{`(${com.name} / ${com.origin_country}) `}</Item>\r\n                                    )\r\n                                )}\r\n                        </Companies>\r\n                    </CompaniesContainer>\r\n\r\n                    <ItemContainer>\r\n                        <Title>Trailer</Title>\r\n                        <Companies>\r\n                            {result.videos.results &&\r\n                                result.videos.results.map((com) => (\r\n                                    <>\r\n                                        <Item>{com.name}</Item>\r\n                                        <Divider>•</Divider>\r\n                                        <Item>{com.site}</Item>\r\n                                        <Divider>•</Divider>\r\n                                        <Item>{com.size}</Item>\r\n                                    </>\r\n                                ))}\r\n                        </Companies>\r\n                        <>\r\n                            <Button onClick={tooglePopup}>Trailer</Button>\r\n                            {showPopup ? (\r\n                                <Popup\r\n                                    videoId={result.videos.results.map((com) => com.key)}\r\n                                    text={result.videos.results.map((com) => console.log(com.key))}\r\n                                    closePopup={tooglePopup}\r\n                                ></Popup>\r\n                            ) : null}\r\n                        </>\r\n                    </ItemContainer>\r\n                </Data>\r\n            </Content>\r\n        </Contianer>\r\n    );\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    Loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\n\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../Api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: { pathname },\r\n        } = props;\r\n\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            Loading: true,\r\n            showPopup: false,\r\n            isMovie: pathname.includes(\"/movie/\"),\r\n        };\r\n    }\r\n\r\n    tooglePopup = () => {\r\n        const { showPopup } = this.state;\r\n        this.setState({ showPopup: !showPopup });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { isMovie } = this.state;\r\n        const {\r\n            match: {\r\n                params: { id },\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n\r\n        const parseId = parseInt(id);\r\n        if (isNaN(parseId)) {\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                const request = await moviesApi.movieDetail(parseId);\r\n                result = request.data;\r\n            } else {\r\n                const request = await tvApi.showDetail(parseId);\r\n                result = request.data;\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't Find Result\" });\r\n        } finally {\r\n            this.setState({ Loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, Loading, showPopup } = this.state;\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                Loading={Loading}\r\n                showPopup={showPopup}\r\n                tooglePopup={this.tooglePopup}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Header from \"../Component/Header\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}></Route>\r\n            <Route path=\"/tv\" exact component={TV}></Route>\r\n            <Route path=\"/serach\" exact component={Search}></Route>\r\n            <Route path=\"/movie/:id\" exact component={Detail}></Route>\r\n            <Route path=\"/show/:id\" exact component={Detail}></Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n        </Switch>\r\n    </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport \"../font.css\";\r\n\r\nconst globalStyle = createGlobalStyle`\r\n${reset};\r\n\r\n\r\na{\r\n    text-decoration:none;\r\n    color:inherit;\r\n}\r\n\r\n*{\r\n    box-sizing: border-box;\r\n}\r\nbody{\r\n    font-family: 'Chilanka', cursive;\r\n    font-size:14px;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:60px;\r\n}`;\r\n\r\nexport default globalStyle;\r\n","import React from \"react\";\nimport Router from \"./Router\";\n\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Component/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}